# GitLab CI/CD configuration for Vite React project
image: node:18-alpine

# Cache node_modules for faster builds
cache:
  paths:
    - node_modules/
    - .npm/

# Define stages
stages:
  - install
  - build
  - test
  - release
  - deploy

# Variables
variables:
  NODE_VERSION: "18"
  NPM_CONFIG_CACHE: ".npm"

# Install dependencies
install_dependencies:
  stage: install
  script:
    - npm ci --cache .npm --prefer-offline
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 hour
  only:
    - main
    - develop
    - merge_requests

# Build the project
build:
  stage: build
  dependencies:
    - install_dependencies
  script:
    - echo "Building React app with Vite..."
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - main
    - develop
    - merge_requests

# Run tests (if you have tests)
test:
  stage: test
  dependencies:
    - install_dependencies
  script:
    - echo "Running tests..."
    # Uncomment when you add tests:
    # - npm run test
    - echo "No tests configured yet"
  allow_failure: true
  only:
    - main
    - develop
    - merge_requests

# Create release on GitLab
release:
  stage: release
  dependencies:
    - build
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release for version $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: |
      ## Changes in this Release
      
      ### What's New
      - React Hello World application
      - Built with Vite for fast development and optimized production builds
      - TypeScript support
      - Bootstrap UI components
      
      ### Build Information
      - **Version:** $CI_COMMIT_TAG
      - **Commit:** $CI_COMMIT_SHA
      - **Built on:** $(date)
      
      ### Installation
      Download the built artifacts from the dist/ folder or deploy to GitLab Pages.
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Build Artifacts'
          url: '$CI_JOB_URL/artifacts/file/dist/'
          filepath: '/dist.zip'
          link_type: 'package'
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/

# Deploy to GitLab Pages
pages:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploying to GitLab Pages..."
    - mkdir public
    - cp -r dist/* public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/

# Manual deployment stage (optional)
deploy_staging:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploying to staging environment..."
    # Add your staging deployment commands here
    # Example: rsync, scp, or API calls
  environment:
    name: staging
    url: https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: manual

deploy_production:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploying to production environment..."
    # Add your production deployment commands here
  environment:
    name: production
    url: https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
      when: manual
